basePath: /api/v1
definitions:
  models.CrewMember:
    properties:
      id:
        type: integer
      name:
        type: string
      starship:
        type: string
    type: object
  models.SongLyrics:
    properties:
      Artist:
        type: string
      Lyrics:
        type: string
      SongTitle:
        type: string
    type: object
info:
  contact: {}
  description: This is a playground Web API using Gin framework.
  license: {}
  title: Go Web API Playground
  version: "1.0"
paths:
  /examples/ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            type: string
        "400":
          description: ok
          schema:
            type: string
        "404":
          description: ok
          schema:
            type: string
        "500":
          description: ok
          schema:
            type: string
      summary: ping example
      tags:
      - example
  /lyrics/{artist}/{song}:
    get:
      consumes:
      - application/json
      description: Get lyrics from the public api https://api.lyrics.ovh/v1/
      parameters:
      - description: Artist
        in: path
        name: artist
        required: true
        type: string
      - description: Song
        in: path
        name: song
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SongLyrics'
        "400":
          description: ok
          schema:
            type: string
        "404":
          description: ok
          schema:
            type: string
        "500":
          description: ok
          schema:
            type: string
      summary: Get lyrics from an Artist and a Song
      tags:
      - lyrics
  /startrek/crewmember:
    get:
      consumes:
      - application/json
      description: Get all Crew Members
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Get all Crew Members
      tags:
      - startrek
    post:
      consumes:
      - application/json
      description: Create a Crew Member
      parameters:
      - description: Crew member
        in: body
        name: crewMember
        required: true
        schema:
          $ref: '#/definitions/models.CrewMember'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Create a Crew Member
      tags:
      - startrek
  /startrek/crewmember/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Crew Member
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Delete a Crew Member
      tags:
      - startrek
    get:
      consumes:
      - application/json
      description: Get a Crew Member
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CrewMember'
      summary: Get a Crew Member
      tags:
      - startrek
    put:
      consumes:
      - application/json
      description: Update a Crew Member
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Crew member
        in: body
        name: crewMember
        required: true
        schema:
          $ref: '#/definitions/models.CrewMember'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CrewMember'
      summary: Update a Crew Member
      tags:
      - startrek
  /startrek/samplecrew:
    post:
      consumes:
      - application/json
      description: Create a Sample Crew Member with 6 Classic Trek Characters
      produces:
      - application/json
      responses:
        "200":
          description: Classic Star Trek Crew created
          schema:
            type: string
      summary: Create a Sample Crew
      tags:
      - startrek
swagger: "2.0"
